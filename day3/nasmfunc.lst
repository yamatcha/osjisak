     1                                  ; nasmfunc.asm
     2                                  ; TAB=4
     3                                  
     4                                  bits 32
     5                                  global io_hlt
     6                                  global write_mem8
     7                                  global io_cli
     8                                  global io_sti
     9                                  global io_stihlt
    10                                  global io_in8
    11                                  global io_in16
    12                                  global io_in32
    13                                  global io_out8
    14                                  global io_out16
    15                                  global io_out32
    16                                  global io_load_eflags
    17                                  global io_store_eflags
    18                                  global load_gdtr
    19                                  global load_idtr
    20                                  
    21                                  section .text
    22                                  
    23                                  io_hlt:
    24 00000000 F4                      	HLT
    25 00000001 C3                      	RET
    26                                  
    27                                  write_mem8:
    28 00000002 8B4C2404                	MOV ECX, [ESP+4]
    29 00000006 8A442408                	MOV AL, [ESP+8]
    30 0000000A 8801                    	MOV [ECX], AL
    31 0000000C C3                      	RET
    32                                  
    33                                  io_cli:
    34 0000000D FA                      	CLI
    35 0000000E C3                      	RET
    36                                  io_sti:
    37 0000000F FB                      	STI
    38 00000010 C3                      	RET
    39                                  io_stihlt:
    40 00000011 FB                      	STI
    41 00000012 F4                      	HLT
    42 00000013 C3                      	RET
    43                                  io_in8:
    44 00000014 8B542404                	MOV EDX,[ESP+4]
    45 00000018 B800000000              	MOV EAX,0
    46 0000001D EC                      	IN AL,DX
    47 0000001E C3                      	RET
    48                                  io_in16:
    49 0000001F 8B542404                	MOV EDX,[ESP+4]
    50 00000023 B800000000              	MOV EAX,0
    51 00000028 66ED                    	IN AX,DX
    52 0000002A C3                      	RET
    53                                  io_in32:
    54 0000002B 8B542404                	MOV EDX,[ESP+4]
    55 0000002F ED                      	IN EAX,DX
    56 00000030 C3                      	RET
    57                                  io_out8:
    58 00000031 8B542404                	MOV EDX,[ESP+4]
    59 00000035 8A442408                	MOV AL,[ESP+8]
    60 00000039 EE                      	OUT DX,AL
    61 0000003A C3                      	RET
    62                                  io_out16:
    63 0000003B 8B542404                	MOV EDX,[ESP+4]
    64 0000003F 8A442408                	MOV AL,[ESP+8]
    65 00000043 66EF                    	OUT DX,AX
    66 00000045 C3                      	RET	
    67                                  io_out32:
    68 00000046 8B542404                	MOV EDX,[ESP+4]
    69 0000004A 8A442408                	MOV AL,[ESP+8]
    70 0000004E EF                      	OUT DX,EAX
    71 0000004F C3                      	RET
    72                                  io_load_eflags:
    73 00000050 9C                      	PUSHFD
    74 00000051 58                      	POP EAX
    75 00000052 C3                      	RET
    76                                  io_store_eflags:
    77 00000053 8B442404                	MOV EAX, [ESP+4]
    78 00000057 50                      	PUSH EAX
    79 00000058 9D                      	POPFD
    80 00000059 C3                      	RET
    81                                  load_gdtr:		; void load_gdtr(int limit, int addr)
    82 0000005A 668B442404              		mov		ax, [esp + 4]		; limit
    83 0000005F 6689442406              		mov 	[esp + 6], ax
    84 00000064 0F01542406              		lgdt	[esp + 6]
    85 00000069 C3                      		ret
    86                                  
    87                                  load_idtr:		; void load_idtr(int limit, int addr)
    88 0000006A 668B442404              		mov		ax, [esp + 4]		; limit
    89 0000006F 6689442406              		mov 	[esp + 6], ax
    90 00000074 0F015C2406              		lidt	[esp + 6]
    91 00000079 C3                      		ret
